// autogenerated using shadowcookie's RszTool: https://github.com/kagenocookie/RszTool
string getStructNameRE7(uint itemType)
{
	switch(itemType)
	{
		case 1: return "Transform2D"; 
		case 2: return "Transform2DClip"; 
		case 3: return "Transform2DExpression"; 
		case 4: return "Transform3D"; 
		case 5: return "Transform3DClip"; 
		case 6: return "Transform3DExpression"; 
		case 7: return "ParentOptions"; 
		case 8: return "FixRandomGenerator"; 
		case 9: return "Spawn"; 
		case 10: return "SpawnExpression"; 
		case 11: return "TypeBillboard2D"; 
		case 12: return "TypeBillboard2DExpression"; 
		case 13: return "TypeBillboard3D"; 
		case 14: return "TypeBillboard3DExpression"; 
		case 15: return "TypeMesh"; 
		case 16: return "TypeMeshClip"; 
		case 17: return "TypeMeshExpression"; 
		case 18: return "TypeRibbonFollow"; 
		case 19: return "TypeRibbonLength"; 
		case 20: return "TypeRibbonChain"; 
		case 21: return "TypeRibbonFollowExpression"; 
		case 22: return "TypeRibbonLengthExpression"; 
		case 23: return "TypeRibbonChainExpression"; 
		case 24: return "TypePolygon"; 
		case 25: return "TypePolygonClip"; 
		case 26: return "TypePolygonExpression"; 
		case 27: return "TypeRibbonTrail"; 
		case 28: return "TypePolygonTrail"; 
		case 29: return "TypeNoDraw"; 
		case 30: return "Velocity2D"; 
		case 31: return "Velocity2DExpression"; 
		case 32: return "Velocity3D"; 
		case 33: return "Velocity3DExpression"; 
		case 34: return "RotateAnim"; 
		case 35: return "RotateAnimExpression"; 
		case 36: return "ScaleAnim"; 
		case 37: return "ScaleAnimExpression"; 
		case 38: return "Life"; 
		case 39: return "LifeExpression"; 
		case 40: return "UVSequence"; 
		case 41: return "UVSequenceExpression"; 
		case 42: return "EmitterShape2D"; 
		case 43: return "EmitterShape2DExpression"; 
		case 44: return "EmitterShape3D"; 
		case 45: return "EmitterShape3DExpression"; 
		case 46: return "AlphaCorrection"; 
		case 47: return "TypeStrainRibbon"; 
		case 48: return "TypeStrainRibbonExpression"; 
		case 49: return "ShaderSettings"; 
		case 50: return "ShaderSettingsExpression"; 
		case 51: return "Distortion"; 
		case 52: return "RenderTarget"; 
		case 53: return "PtLife"; 
		case 54: return "PtBehavior"; 
		case 55: return "PtBehaviorClip"; 
		case 56: return "PlayEfx"; 
		case 57: return "FadeByAngle"; 
		case 58: return "FadeByAngleExpression"; 
		case 59: return "FadeByDepth"; 
		case 60: return "FadeByDepthExpression"; 
		case 61: return "FadeByOcclusion"; 
		case 62: return "FadeByOcclusionExpression"; 
		case 63: return "FakeDoF"; 
		case 64: return "LuminanceBleed"; 
		case 65: return "TypeNodeBillboard"; 
		case 66: return "TypeNodeBillboardExpression"; 
		case 67: return "UnitCulling"; 
		case 68: return "FluidEmitter2D"; 
		case 69: return "FluidSimulator2D"; 
		case 70: return "PlayEmitter"; 
		case 71: return "PtTransform3D"; 
		case 72: return "PtTransform3DClip"; 
		case 73: return "PtTransform2D"; 
		case 74: return "PtTransform2DClip"; 
		case 75: return "PtVelocity3D"; 
		case 76: return "PtVelocity3DClip"; 
		case 77: return "PtVelocity2D"; 
		case 78: return "PtVelocity2DClip"; 
		case 79: return "PtColliderAction"; 
		case 80: return "PtCollision"; 
		case 81: return "PtColor"; 
		case 82: return "PtColorClip"; 
		case 83: return "PtUvSequence"; 
		case 84: return "PtUvSequenceClip"; 
		case 85: return "TypeGpuBillboard"; 
		case 86: return "EmitterPriority"; 
		case 87: return "ItemNum"; 
		default: return "";
	}
}
string getStructNameRE2(uint itemType)
{
	switch(itemType)
	{
		case 1: return "Spawn"; 
		case 2: return "SpawnExpression"; 
		case 3: return "Transform2D"; 
		case 4: return "Transform2DModifier"; 
		case 5: return "Transform2DClip"; 
		case 6: return "Transform2DExpression"; 
		case 7: return "Transform3D"; 
		case 8: return "Transform3DModifier"; 
		case 9: return "Transform3DClip"; 
		case 10: return "Transform3DExpression"; 
		case 11: return "ParentOptions"; 
		case 12: return "FixRandomGenerator"; 
		case 13: return "TypeBillboard2D"; 
		case 14: return "TypeBillboard2DExpression"; 
		case 15: return "TypeBillboard3D"; 
		case 16: return "TypeBillboard3DExpression"; 
		case 17: return "TypeMesh"; 
		case 18: return "TypeMeshClip"; 
		case 19: return "TypeMeshExpression"; 
		case 20: return "TypeRibbonFollow"; 
		case 21: return "TypeRibbonLength"; 
		case 22: return "TypeRibbonChain"; 
		case 23: return "TypeRibbonFixEnd"; 
		case 24: return "TypeRibbonLightweight"; 
		case 25: return "TypeRibbonFollowExpression"; 
		case 26: return "TypeRibbonLengthExpression"; 
		case 27: return "TypeRibbonChainExpression"; 
		case 28: return "TypeRibbonFixEndExpression"; 
		case 29: return "TypePolygon"; 
		case 30: return "TypePolygonClip"; 
		case 31: return "TypePolygonExpression"; 
		case 32: return "TypeRibbonTrail"; 
		case 33: return "TypePolygonTrail"; 
		case 34: return "TypeNoDraw"; 
		case 35: return "TypeNoDrawExpression"; 
		case 36: return "Velocity2D"; 
		case 37: return "Velocity2DExpression"; 
		case 38: return "Velocity3D"; 
		case 39: return "Velocity3DExpression"; 
		case 40: return "RotateAnim"; 
		case 41: return "RotateAnimExpression"; 
		case 42: return "ScaleAnim"; 
		case 43: return "ScaleAnimExpression"; 
		case 44: return "Life"; 
		case 45: return "LifeExpression"; 
		case 46: return "UVSequence"; 
		case 47: return "UVSequenceExpression"; 
		case 48: return "UVScroll"; 
		case 49: return "TextureUnit"; 
		case 50: return "EmitterShape2D"; 
		case 51: return "EmitterShape2DExpression"; 
		case 52: return "EmitterShape3D"; 
		case 53: return "EmitterShape3DExpression"; 
		case 54: return "AlphaCorrection"; 
		case 55: return "TypeStrainRibbon"; 
		case 56: return "TypeStrainRibbonExpression"; 
		case 57: return "TypeLightning3D"; 
		case 58: return "ShaderSettings"; 
		case 59: return "ShaderSettingsExpression"; 
		case 60: return "Distortion"; 
		case 61: return "RenderTarget"; 
		case 62: return "PtLife"; 
		case 63: return "PtBehavior"; 
		case 64: return "PtBehaviorClip"; 
		case 65: return "PlayEfx"; 
		case 66: return "FadeByAngle"; 
		case 67: return "FadeByAngleExpression"; 
		case 68: return "FadeByEmitterAngle"; 
		case 69: return "FadeByDepth"; 
		case 70: return "FadeByDepthExpression"; 
		case 71: return "FadeByOcclusion"; 
		case 72: return "FadeByOcclusionExpression"; 
		case 73: return "FakeDoF"; 
		case 74: return "LuminanceBleed"; 
		case 75: return "TypeNodeBillboard"; 
		case 76: return "TypeNodeBillboardExpression"; 
		case 77: return "UnitCulling"; 
		case 78: return "FluidEmitter2D"; 
		case 79: return "FluidSimulator2D"; 
		case 80: return "PlayEmitter"; 
		case 81: return "PtTransform3D"; 
		case 82: return "PtTransform3DClip"; 
		case 83: return "PtTransform2D"; 
		case 84: return "PtTransform2DClip"; 
		case 85: return "PtVelocity3D"; 
		case 86: return "PtVelocity3DClip"; 
		case 87: return "PtVelocity2D"; 
		case 88: return "PtVelocity2DClip"; 
		case 89: return "PtColliderAction"; 
		case 90: return "PtCollision"; 
		case 91: return "PtColor"; 
		case 92: return "PtColorClip"; 
		case 93: return "PtUvSequence"; 
		case 94: return "PtUvSequenceClip"; 
		case 95: return "MeshEmitter"; 
		case 96: return "MeshEmitterClip"; 
		case 97: return "MeshEmitterExpression"; 
		case 98: return "VectorFieldParameter"; 
		case 99: return "VectorFieldParameterClip"; 
		case 100: return "VectorFieldParameterExpression"; 
		case 101: return "DepthOperator"; 
		case 102: return "ShapeOperator"; 
		case 103: return "ShapeOperatorExpression"; 
		case 104: return "WindInfluence3D"; 
		case 105: return "TypeGpuBillboard"; 
		case 106: return "TypeGpuBillboardExpression"; 
		case 107: return "TypeGpuRibbonFollow"; 
		case 108: return "EmitterPriority"; 
		case 109: return "DrawOverlay"; 
		case 110: return "VectorField"; 
		case 111: return "VolumeField"; 
		case 112: return "AngularVelocity3D"; 
		case 113: return "AngularVelocity2D"; 
		case 114: return "IgnorePlayerColor"; 
		case 115: return "ProceduralDistortion"; 
		case 116: return "ProceduralDistortionClip"; 
		case 117: return "ItemNum"; 
		default: return "";
	}
}
string getStructNameDMC5(uint itemType)
{
	switch(itemType)
	{
		case 1: return "Spawn"; 
		case 2: return "SpawnExpression"; 
		case 3: return "Transform2D"; 
		case 4: return "Transform2DModifier"; 
		case 5: return "Transform2DClip"; 
		case 6: return "Transform2DExpression"; 
		case 7: return "Transform3D"; 
		case 8: return "Transform3DModifier"; 
		case 9: return "Transform3DClip"; 
		case 10: return "Transform3DExpression"; 
		case 11: return "ParentOptions"; 
		case 12: return "FixRandomGenerator"; 
		case 13: return "TypeBillboard2D"; 
		case 14: return "TypeBillboard2DExpression"; 
		case 15: return "TypeBillboard3D"; 
		case 16: return "TypeBillboard3DExpression"; 
		case 17: return "TypeMesh"; 
		case 18: return "TypeMeshClip"; 
		case 19: return "TypeMeshExpression"; 
		case 20: return "TypeRibbonFollow"; 
		case 21: return "TypeRibbonLength"; 
		case 22: return "TypeRibbonChain"; 
		case 23: return "TypeRibbonFixEnd"; 
		case 24: return "TypeRibbonLightweight"; 
		case 25: return "TypeRibbonFollowExpression"; 
		case 26: return "TypeRibbonLengthExpression"; 
		case 27: return "TypeRibbonChainExpression"; 
		case 28: return "TypeRibbonFixEndExpression"; 
		case 29: return "TypePolygon"; 
		case 30: return "TypePolygonClip"; 
		case 31: return "TypePolygonExpression"; 
		case 32: return "TypeRibbonTrail"; 
		case 33: return "TypePolygonTrail"; 
		case 34: return "TypeNoDraw"; 
		case 35: return "TypeNoDrawExpression"; 
		case 36: return "Velocity2D"; 
		case 37: return "Velocity2DExpression"; 
		case 38: return "Velocity3D"; 
		case 39: return "Velocity3DExpression"; 
		case 40: return "RotateAnim"; 
		case 41: return "RotateAnimExpression"; 
		case 42: return "ScaleAnim"; 
		case 43: return "ScaleAnimExpression"; 
		case 44: return "Life"; 
		case 45: return "LifeExpression"; 
		case 46: return "UVSequence"; 
		case 47: return "UVSequenceExpression"; 
		case 48: return "UVScroll"; 
		case 49: return "TextureUnit"; 
		case 50: return "EmitterShape2D"; 
		case 51: return "EmitterShape2DExpression"; 
		case 52: return "EmitterShape3D"; 
		case 53: return "EmitterShape3DExpression"; 
		case 54: return "AlphaCorrection"; 
		case 55: return "TypeStrainRibbon"; 
		case 56: return "TypeStrainRibbonExpression"; 
		case 57: return "TypeLightning3D"; 
		case 58: return "ShaderSettings"; 
		case 59: return "ShaderSettingsExpression"; 
		case 60: return "Distortion"; 
		case 61: return "RenderTarget"; 
		case 62: return "PtLife"; 
		case 63: return "PtBehavior"; 
		case 64: return "PtBehaviorClip"; 
		case 65: return "PlayEfx"; 
		case 66: return "FadeByAngle"; 
		case 67: return "FadeByAngleExpression"; 
		case 68: return "FadeByEmitterAngle"; 
		case 69: return "FadeByDepth"; 
		case 70: return "FadeByDepthExpression"; 
		case 71: return "FadeByOcclusion"; 
		case 72: return "FadeByOcclusionExpression"; 
		case 73: return "FakeDoF"; 
		case 74: return "LuminanceBleed"; 
		case 75: return "TypeNodeBillboard"; 
		case 76: return "TypeNodeBillboardExpression"; 
		case 77: return "UnitCulling"; 
		case 78: return "FluidEmitter2D"; 
		case 79: return "FluidSimulator2D"; 
		case 80: return "PlayEmitter"; 
		case 81: return "PtTransform3D"; 
		case 82: return "PtTransform3DClip"; 
		case 83: return "PtTransform2D"; 
		case 84: return "PtTransform2DClip"; 
		case 85: return "PtVelocity3D"; 
		case 86: return "PtVelocity3DClip"; 
		case 87: return "PtVelocity2D"; 
		case 88: return "PtVelocity2DClip"; 
		case 89: return "PtColliderAction"; 
		case 90: return "PtCollision"; 
		case 91: return "PtColor"; 
		case 92: return "PtColorClip"; 
		case 93: return "PtUvSequence"; 
		case 94: return "PtUvSequenceClip"; 
		case 95: return "MeshEmitter"; 
		case 96: return "MeshEmitterClip"; 
		case 97: return "MeshEmitterExpression"; 
		case 98: return "VectorFieldParameter"; 
		case 99: return "VectorFieldParameterClip"; 
		case 100: return "VectorFieldParameterExpression"; 
		case 101: return "DepthOperator"; 
		case 102: return "ShapeOperator"; 
		case 103: return "ShapeOperatorExpression"; 
		case 104: return "WindInfluence3D"; 
		case 105: return "TypeGpuBillboard"; 
		case 106: return "TypeGpuBillboardExpression"; 
		case 107: return "TypeGpuRibbonFollow"; 
		case 108: return "EmitterPriority"; 
		case 109: return "DrawOverlay"; 
		case 110: return "VectorField"; 
		case 111: return "VolumeField"; 
		case 112: return "AngularVelocity3D"; 
		case 113: return "PtAngularVelocity3D"; 
		case 114: return "PtAngularVelocity3DExpression"; 
		case 115: return "AngularVelocity2D"; 
		case 116: return "PtAngularVelocity2D"; 
		case 117: return "PtAngularVelocity2DExpression"; 
		case 118: return "IgnorePlayerColor"; 
		case 119: return "ProceduralDistortion"; 
		case 120: return "ProceduralDistortionClip"; 
		case 121: return "ItemNum"; 
		default: return "";
	}
}
string getStructNameRE3(uint itemType)
{
	switch(itemType)
	{
		case 1: return "FixRandomGenerator"; 
		case 2: return "Spawn"; 
		case 3: return "SpawnExpression"; 
		case 4: return "Transform2D"; 
		case 5: return "Transform2DModifierDelayFrame"; 
		case 6: return "Transform2DModifier"; 
		case 7: return "Transform2DClip"; 
		case 8: return "Transform2DExpression"; 
		case 9: return "Transform3D"; 
		case 10: return "Transform3DModifierDelayFrame"; 
		case 11: return "Transform3DModifier"; 
		case 12: return "Transform3DClip"; 
		case 13: return "Transform3DExpression"; 
		case 14: return "ParentOptions"; 
		case 15: return "EmitterColor"; 
		case 16: return "EmitterColorClip"; 
		case 17: return "TypeBillboard2D"; 
		case 18: return "TypeBillboard2DExpression"; 
		case 19: return "TypeBillboard3D"; 
		case 20: return "TypeBillboard3DExpression"; 
		case 21: return "TypeBillboard3DMaterial"; 
		case 22: return "TypeBillboard3DMaterialClip"; 
		case 23: return "TypeBillboard3DMaterialExpression"; 
		case 24: return "TypeMesh"; 
		case 25: return "TypeMeshClip"; 
		case 26: return "TypeMeshExpression"; 
		case 27: return "TypeRibbonFollow"; 
		case 28: return "TypeRibbonLength"; 
		case 29: return "TypeRibbonChain"; 
		case 30: return "TypeRibbonFixEnd"; 
		case 31: return "TypeRibbonLightweight"; 
		case 32: return "TypeRibbonFollowExpression"; 
		case 33: return "TypeRibbonLengthExpression"; 
		case 34: return "TypeRibbonChainExpression"; 
		case 35: return "TypeRibbonFixEndExpression"; 
		case 36: return "TypePolygon"; 
		case 37: return "TypePolygonClip"; 
		case 38: return "TypePolygonExpression"; 
		case 39: return "TypeRibbonTrail"; 
		case 40: return "TypePolygonTrail"; 
		case 41: return "TypeNoDraw"; 
		case 42: return "TypeNoDrawExpression"; 
		case 43: return "Velocity2DDelayFrame"; 
		case 44: return "Velocity2D"; 
		case 45: return "Velocity2DExpression"; 
		case 46: return "Velocity3DDelayFrame"; 
		case 47: return "Velocity3D"; 
		case 48: return "Velocity3DExpression"; 
		case 49: return "RotateAnimDelayFrame"; 
		case 50: return "RotateAnim"; 
		case 51: return "RotateAnimExpression"; 
		case 52: return "ScaleAnimDelayFrame"; 
		case 53: return "ScaleAnim"; 
		case 54: return "ScaleAnimExpression"; 
		case 55: return "VanishArea3D"; 
		case 56: return "VanishArea3DExpression"; 
		case 57: return "Life"; 
		case 58: return "LifeExpression"; 
		case 59: return "UVSequence"; 
		case 60: return "UVSequenceModifier"; 
		case 61: return "UVSequenceExpression"; 
		case 62: return "UVScroll"; 
		case 63: return "TextureUnit"; 
		case 64: return "TextureUnitExpression"; 
		case 65: return "TextureFilter"; 
		case 66: return "EmitterShape2D"; 
		case 67: return "EmitterShape2DExpression"; 
		case 68: return "EmitterShape3D"; 
		case 69: return "EmitterShape3DExpression"; 
		case 70: return "AlphaCorrection"; 
		case 71: return "ContrastHighlighter"; 
		case 72: return "ColorGrading"; 
		case 73: return "TexelChannelOperator"; 
		case 74: return "TexelChannelOperatorClip"; 
		case 75: return "TexelChannelOperatorExpression"; 
		case 76: return "TypeStrainRibbon"; 
		case 77: return "TypeStrainRibbonExpression"; 
		case 78: return "TypeLightning3D"; 
		case 79: return "ShaderSettings"; 
		case 80: return "ShaderSettingsExpression"; 
		case 81: return "Distortion"; 
		case 82: return "RenderTarget"; 
		case 83: return "PtLife"; 
		case 84: return "PtBehavior"; 
		case 85: return "PtBehaviorClip"; 
		case 86: return "PlayEfx"; 
		case 87: return "FadeByAngle"; 
		case 88: return "FadeByAngleExpression"; 
		case 89: return "FadeByEmitterAngle"; 
		case 90: return "FadeByDepth"; 
		case 91: return "FadeByDepthExpression"; 
		case 92: return "FadeByOcclusion"; 
		case 93: return "FadeByOcclusionExpression"; 
		case 94: return "FakeDoF"; 
		case 95: return "LuminanceBleed"; 
		case 96: return "TypeNodeBillboard"; 
		case 97: return "TypeNodeBillboardExpression"; 
		case 98: return "UnitCulling"; 
		case 99: return "FluidEmitter2D"; 
		case 100: return "FluidSimulator2D"; 
		case 101: return "PlayEmitter"; 
		case 102: return "PtTransform3D"; 
		case 103: return "PtTransform3DClip"; 
		case 104: return "PtTransform2D"; 
		case 105: return "PtTransform2DClip"; 
		case 106: return "PtVelocity3D"; 
		case 107: return "PtVelocity3DClip"; 
		case 108: return "PtVelocity2D"; 
		case 109: return "PtVelocity2DClip"; 
		case 110: return "PtColliderAction"; 
		case 111: return "PtCollision"; 
		case 112: return "PtColor"; 
		case 113: return "PtColorClip"; 
		case 114: return "PtUvSequence"; 
		case 115: return "PtUvSequenceClip"; 
		case 116: return "MeshEmitter"; 
		case 117: return "MeshEmitterClip"; 
		case 118: return "MeshEmitterExpression"; 
		case 119: return "VectorFieldParameter"; 
		case 120: return "VectorFieldParameterClip"; 
		case 121: return "VectorFieldParameterExpression"; 
		case 122: return "DepthOperator"; 
		case 123: return "PlaneCollider"; 
		case 124: return "PlaneColliderExpression"; 
		case 125: return "DepthOcclusion"; 
		case 126: return "ShapeOperator"; 
		case 127: return "ShapeOperatorExpression"; 
		case 128: return "WindInfluence3DDelayFrame"; 
		case 129: return "WindInfluence3D"; 
		case 130: return "Attractor"; 
		case 131: return "AttractorClip"; 
		case 132: return "AttractorExpression"; 
		case 133: return "CustomComputeShader"; 
		case 134: return "TypeGpuBillboard"; 
		case 135: return "TypeGpuBillboardExpression"; 
		case 136: return "TypeGpuPolygon"; 
		case 137: return "TypeGpuRibbonFollow"; 
		case 138: return "TypeGpuRibbonLength"; 
		case 139: return "TypeGpuMesh"; 
		case 140: return "TypeGpuMeshExpression"; 
		case 141: return "TypeGpuLightning3D"; 
		case 142: return "EmitterPriority"; 
		case 143: return "DrawOverlay"; 
		case 144: return "VectorField"; 
		case 145: return "VolumeField"; 
		case 146: return "AngularVelocity3DDelayFrame"; 
		case 147: return "AngularVelocity3D"; 
		case 148: return "PtAngularVelocity3D"; 
		case 149: return "PtAngularVelocity3DExpression"; 
		case 150: return "AngularVelocity2DDelayFrame"; 
		case 151: return "AngularVelocity2D"; 
		case 152: return "PtAngularVelocity2D"; 
		case 153: return "PtAngularVelocity2DExpression"; 
		case 154: return "IgnorePlayerColor"; 
		case 155: return "ProceduralDistortionDelayFrame"; 
		case 156: return "ProceduralDistortion"; 
		case 157: return "ProceduralDistortionClip"; 
		case 158: return "ProceduralDistortionExpression"; 
		case 159: return "TestBehaviorUpdater"; 
		case 160: return "ItemNum"; 
		default: return "";
	}
}
string getStructNameMHRise(uint itemType)
{
	switch(itemType)
	{
		case 1: return "FixRandomGenerator"; 
		case 2: return "EffectShader"; 
		case 3: return "Spawn"; 
		case 4: return "SpawnExpression"; 
		case 5: return "Transform2D"; 
		case 6: return "Transform2DModifierDelayFrame"; 
		case 7: return "Transform2DModifier"; 
		case 8: return "Transform2DClip"; 
		case 9: return "Transform2DExpression"; 
		case 10: return "Transform3D"; 
		case 11: return "Transform3DModifierDelayFrame"; 
		case 12: return "Transform3DModifier"; 
		case 13: return "Transform3DClip"; 
		case 14: return "Transform3DExpression"; 
		case 15: return "ParentOptions"; 
		case 16: return "EmitterColor"; 
		case 17: return "EmitterColorClip"; 
		case 18: return "PtSort"; 
		case 19: return "TypeBillboard2D"; 
		case 20: return "TypeBillboard2DExpression"; 
		case 21: return "TypeBillboard3D"; 
		case 22: return "TypeBillboard3DExpression"; 
		case 23: return "TypeBillboard3DMaterial"; 
		case 24: return "TypeBillboard3DMaterialClip"; 
		case 25: return "TypeBillboard3DMaterialExpression"; 
		case 26: return "TypeMesh"; 
		case 27: return "TypeMeshClip"; 
		case 28: return "TypeMeshExpression"; 
		case 29: return "TypeRibbonFollow"; 
		case 30: return "TypeRibbonLength"; 
		case 31: return "TypeRibbonChain"; 
		case 32: return "TypeRibbonFixEnd"; 
		case 33: return "TypeRibbonLightweight"; 
		case 34: return "TypeRibbonParticle"; 
		case 35: return "TypeRibbonFollowMaterial"; 
		case 36: return "TypeRibbonFollowMaterialClip"; 
		case 37: return "TypeRibbonFollowMaterialExpression"; 
		case 38: return "TypeRibbonLengthMaterial"; 
		case 39: return "TypeRibbonLengthMaterialClip"; 
		case 40: return "TypeRibbonLengthMaterialExpression"; 
		case 41: return "TypeRibbonChainMaterial"; 
		case 42: return "TypeRibbonChainMaterialClip"; 
		case 43: return "TypeRibbonChainMaterialExpression"; 
		case 44: return "TypeRibbonFixEndMaterial"; 
		case 45: return "TypeRibbonFixEndMaterialClip"; 
		case 46: return "TypeRibbonFixEndMaterialExpression"; 
		case 47: return "TypeRibbonLightweightMaterial"; 
		case 48: return "TypeRibbonLightweightMaterialClip"; 
		case 49: return "TypeRibbonLightweightMaterialExpression"; 
		case 50: return "TypeStrainRibbonMaterial"; 
		case 51: return "TypeStrainRibbonMaterialClip"; 
		case 52: return "TypeStrainRibbonMaterialExpression"; 
		case 53: return "TypeRibbonFollowExpression"; 
		case 54: return "TypeRibbonLengthExpression"; 
		case 55: return "TypeRibbonChainExpression"; 
		case 56: return "TypeRibbonFixEndExpression"; 
		case 57: return "TypePolygon"; 
		case 58: return "TypePolygonClip"; 
		case 59: return "TypePolygonExpression"; 
		case 60: return "TypePolygonMaterial"; 
		case 61: return "TypeRibbonTrail"; 
		case 62: return "TypePolygonTrail"; 
		case 63: return "TypePolygonTrailMaterial"; 
		case 64: return "TypeNoDraw"; 
		case 65: return "TypeNoDrawExpression"; 
		case 66: return "Velocity2DDelayFrame"; 
		case 67: return "Velocity2D"; 
		case 68: return "Velocity2DExpression"; 
		case 69: return "Velocity3DDelayFrame"; 
		case 70: return "Velocity3D"; 
		case 71: return "Velocity3DExpression"; 
		case 72: return "RotateAnimDelayFrame"; 
		case 73: return "RotateAnim"; 
		case 74: return "RotateAnimExpression"; 
		case 75: return "ScaleAnimDelayFrame"; 
		case 76: return "ScaleAnim"; 
		case 77: return "ScaleAnimExpression"; 
		case 78: return "VanishArea3D"; 
		case 79: return "VanishArea3DExpression"; 
		case 80: return "Life"; 
		case 81: return "LifeExpression"; 
		case 82: return "UVSequence"; 
		case 83: return "UVSequenceModifier"; 
		case 84: return "UVSequenceExpression"; 
		case 85: return "UVScroll"; 
		case 86: return "TextureUnit"; 
		case 87: return "TextureUnitExpression"; 
		case 88: return "TextureFilter"; 
		case 89: return "EmitterShape2D"; 
		case 90: return "EmitterShape2DExpression"; 
		case 91: return "EmitterShape3D"; 
		case 92: return "EmitterShape3DExpression"; 
		case 93: return "AlphaCorrection"; 
		case 94: return "ContrastHighlighter"; 
		case 95: return "ColorGrading"; 
		case 96: return "Blink"; 
		case 97: return "Noise"; 
		case 98: return "TexelChannelOperator"; 
		case 99: return "TexelChannelOperatorClip"; 
		case 100: return "TexelChannelOperatorExpression"; 
		case 101: return "TypeStrainRibbon"; 
		case 102: return "TypeStrainRibbonExpression"; 
		case 103: return "TypeLightning3D"; 
		case 104: return "TypeLightning3DExpression"; 
		case 105: return "TypeLightning3DMaterial"; 
		case 106: return "ShaderSettings"; 
		case 107: return "ShaderSettingsExpression"; 
		case 108: return "Distortion"; 
		case 109: return "DistortionExpression"; 
		case 110: return "VolumetricLighting"; 
		case 111: return "RenderTarget"; 
		case 112: return "PtLife"; 
		case 113: return "PtBehavior"; 
		case 114: return "PtBehaviorClip"; 
		case 115: return "PlayEfx"; 
		case 116: return "FadeByAngle"; 
		case 117: return "FadeByAngleExpression"; 
		case 118: return "FadeByEmitterAngle"; 
		case 119: return "FadeByDepth"; 
		case 120: return "FadeByDepthExpression"; 
		case 121: return "FadeByOcclusion"; 
		case 122: return "FadeByOcclusionExpression"; 
		case 123: return "FakeDoF"; 
		case 124: return "LuminanceBleed"; 
		case 125: return "ScaleByDepth"; 
		case 126: return "TypeNodeBillboard"; 
		case 127: return "TypeNodeBillboardExpression"; 
		case 128: return "UnitCulling"; 
		case 129: return "FluidEmitter2D"; 
		case 130: return "FluidSimulator2D"; 
		case 131: return "PlayEmitter"; 
		case 132: return "PtTransform3D"; 
		case 133: return "PtTransform3DClip"; 
		case 134: return "PtTransform2D"; 
		case 135: return "PtTransform2DClip"; 
		case 136: return "PtVelocity3D"; 
		case 137: return "PtVelocity3DClip"; 
		case 138: return "PtVelocity2D"; 
		case 139: return "PtVelocity2DClip"; 
		case 140: return "PtColliderAction"; 
		case 141: return "PtCollision"; 
		case 142: return "PtColor"; 
		case 143: return "PtColorClip"; 
		case 144: return "PtUvSequence"; 
		case 145: return "PtUvSequenceClip"; 
		case 146: return "MeshEmitter"; 
		case 147: return "MeshEmitterClip"; 
		case 148: return "MeshEmitterExpression"; 
		case 149: return "ScreenSpaceEmitter"; 
		case 150: return "VectorFieldParameter"; 
		case 151: return "VectorFieldParameterClip"; 
		case 152: return "VectorFieldParameterExpression"; 
		case 153: return "GlobalVectorField"; 
		case 154: return "GlobalVectorFieldClip"; 
		case 155: return "GlobalVectorFieldExpression"; 
		case 156: return "DirectionalFieldParameter"; 
		case 157: return "DirectionalFieldParameterClip"; 
		case 158: return "DirectionalFieldParameterExpression"; 
		case 159: return "DepthOperator"; 
		case 160: return "PlaneCollider"; 
		case 161: return "PlaneColliderExpression"; 
		case 162: return "DepthOcclusion"; 
		case 163: return "ShapeOperator"; 
		case 164: return "ShapeOperatorExpression"; 
		case 165: return "WindInfluence3DDelayFrame"; 
		case 166: return "WindInfluence3D"; 
		case 167: return "Attractor"; 
		case 168: return "AttractorClip"; 
		case 169: return "AttractorExpression"; 
		case 170: return "CustomComputeShader"; 
		case 171: return "TypeGpuBillboard"; 
		case 172: return "TypeGpuBillboardExpression"; 
		case 173: return "TypeGpuPolygon"; 
		case 174: return "TypeGpuRibbonFollow"; 
		case 175: return "TypeGpuRibbonLength"; 
		case 176: return "TypeGpuMesh"; 
		case 177: return "TypeGpuMeshExpression"; 
		case 178: return "TypeGpuMeshTrail"; 
		case 179: return "TypeGpuMeshTrailClip"; 
		case 180: return "TypeGpuMeshTrailExpression"; 
		case 181: return "TypeGpuLightning3D"; 
		case 182: return "EmitterPriority"; 
		case 183: return "DrawOverlay"; 
		case 184: return "VectorField"; 
		case 185: return "VolumeField"; 
		case 186: return "DirectionalField"; 
		case 187: return "AngularVelocity3DDelayFrame"; 
		case 188: return "AngularVelocity3D"; 
		case 189: return "PtAngularVelocity3D"; 
		case 190: return "PtAngularVelocity3DExpression"; 
		case 191: return "AngularVelocity2DDelayFrame"; 
		case 192: return "AngularVelocity2D"; 
		case 193: return "PtAngularVelocity2D"; 
		case 194: return "PtAngularVelocity2DExpression"; 
		case 195: return "IgnorePlayerColor"; 
		case 196: return "ProceduralDistortionDelayFrame"; 
		case 197: return "ProceduralDistortion"; 
		case 198: return "ProceduralDistortionClip"; 
		case 199: return "ProceduralDistortionExpression"; 
		case 200: return "TestBehaviorUpdater"; 
		case 201: return "StretchBlur"; 
		case 202: return "StretchBlurExpression"; 
		case 203: return "EmitterHSV"; 
		case 204: return "EmitterHSVExpression"; 
		case 205: return "FlowMap"; 
		case 206: return "RgbCommon"; 
		case 207: return "RgbWater"; 
		case 208: return "EmitMask"; 
		case 209: return "TypeModularBillboard"; 
		default: return "";
	}
}
string getStructNameRE8(uint itemType)
{
	switch(itemType)
	{
		case 1: return "FixRandomGenerator"; 
		case 2: return "EffectShader"; 
		case 3: return "Spawn"; 
		case 4: return "SpawnExpression"; 
		case 5: return "Transform2D"; 
		case 6: return "Transform2DModifierDelayFrame"; 
		case 7: return "Transform2DModifier"; 
		case 8: return "Transform2DClip"; 
		case 9: return "Transform2DExpression"; 
		case 10: return "Transform3D"; 
		case 11: return "Transform3DModifierDelayFrame"; 
		case 12: return "Transform3DModifier"; 
		case 13: return "Transform3DClip"; 
		case 14: return "Transform3DExpression"; 
		case 15: return "ParentOptions"; 
		case 16: return "EmitterColor"; 
		case 17: return "EmitterColorClip"; 
		case 18: return "PtSort"; 
		case 19: return "TypeBillboard2D"; 
		case 20: return "TypeBillboard2DExpression"; 
		case 21: return "TypeBillboard3D"; 
		case 22: return "TypeBillboard3DExpression"; 
		case 23: return "TypeBillboard3DMaterial"; 
		case 24: return "TypeBillboard3DMaterialClip"; 
		case 25: return "TypeBillboard3DMaterialExpression"; 
		case 26: return "TypeMesh"; 
		case 27: return "TypeMeshClip"; 
		case 28: return "TypeMeshExpression"; 
		case 29: return "TypeRibbonFollow"; 
		case 30: return "TypeRibbonLength"; 
		case 31: return "TypeRibbonChain"; 
		case 32: return "TypeRibbonFixEnd"; 
		case 33: return "TypeRibbonLightweight"; 
		case 34: return "TypeRibbonParticle"; 
		case 35: return "TypeRibbonFollowMaterial"; 
		case 36: return "TypeRibbonFollowMaterialClip"; 
		case 37: return "TypeRibbonFollowMaterialExpression"; 
		case 38: return "TypeRibbonLengthMaterial"; 
		case 39: return "TypeRibbonLengthMaterialClip"; 
		case 40: return "TypeRibbonLengthMaterialExpression"; 
		case 41: return "TypeRibbonChainMaterial"; 
		case 42: return "TypeRibbonChainMaterialClip"; 
		case 43: return "TypeRibbonChainMaterialExpression"; 
		case 44: return "TypeRibbonFixEndMaterial"; 
		case 45: return "TypeRibbonFixEndMaterialClip"; 
		case 46: return "TypeRibbonFixEndMaterialExpression"; 
		case 47: return "TypeRibbonLightweightMaterial"; 
		case 48: return "TypeRibbonLightweightMaterialClip"; 
		case 49: return "TypeRibbonLightweightMaterialExpression"; 
		case 50: return "TypeStrainRibbonMaterial"; 
		case 51: return "TypeStrainRibbonMaterialClip"; 
		case 52: return "TypeStrainRibbonMaterialExpression"; 
		case 53: return "TypeRibbonFollowExpression"; 
		case 54: return "TypeRibbonLengthExpression"; 
		case 55: return "TypeRibbonChainExpression"; 
		case 56: return "TypeRibbonFixEndExpression"; 
		case 57: return "TypeRibbonLightweightExpression"; 
		case 58: return "TypeRibbonParticleExpression"; 
		case 59: return "TypePolygon"; 
		case 60: return "TypePolygonClip"; 
		case 61: return "TypePolygonExpression"; 
		case 62: return "TypePolygonMaterial"; 
		case 63: return "TypePolygonMaterialExpression"; 
		case 64: return "TypeRibbonTrail"; 
		case 65: return "TypePolygonTrail"; 
		case 66: return "TypePolygonTrailExpression"; 
		case 67: return "TypePolygonTrailMaterial"; 
		case 68: return "TypePolygonTrailMaterialExpression"; 
		case 69: return "TypeNoDraw"; 
		case 70: return "TypeNoDrawExpression"; 
		case 71: return "Velocity2DDelayFrame"; 
		case 72: return "Velocity2D"; 
		case 73: return "Velocity2DExpression"; 
		case 74: return "Velocity3DDelayFrame"; 
		case 75: return "Velocity3D"; 
		case 76: return "Velocity3DExpression"; 
		case 77: return "RotateAnimDelayFrame"; 
		case 78: return "RotateAnim"; 
		case 79: return "RotateAnimExpression"; 
		case 80: return "ScaleAnimDelayFrame"; 
		case 81: return "ScaleAnim"; 
		case 82: return "ScaleAnimExpression"; 
		case 83: return "VanishArea3D"; 
		case 84: return "VanishArea3DExpression"; 
		case 85: return "Life"; 
		case 86: return "LifeExpression"; 
		case 87: return "UVSequence"; 
		case 88: return "UVSequenceModifier"; 
		case 89: return "UVSequenceExpression"; 
		case 90: return "UVScroll"; 
		case 91: return "TextureUnit"; 
		case 92: return "TextureUnitExpression"; 
		case 93: return "TextureFilter"; 
		case 94: return "EmitterShape2D"; 
		case 95: return "EmitterShape2DExpression"; 
		case 96: return "EmitterShape3D"; 
		case 97: return "EmitterShape3DExpression"; 
		case 98: return "AlphaCorrection"; 
		case 99: return "ContrastHighlighter"; 
		case 100: return "ColorGrading"; 
		case 101: return "Blink"; 
		case 102: return "Noise"; 
		case 103: return "TexelChannelOperator"; 
		case 104: return "TexelChannelOperatorClip"; 
		case 105: return "TexelChannelOperatorExpression"; 
		case 106: return "TypeStrainRibbon"; 
		case 107: return "TypeStrainRibbonExpression"; 
		case 108: return "TypeLightning3D"; 
		case 109: return "TypeLightning3DExpression"; 
		case 110: return "TypeLightning3DMaterial"; 
		case 111: return "ShaderSettings"; 
		case 112: return "ShaderSettingsExpression"; 
		case 113: return "Distortion"; 
		case 114: return "DistortionExpression"; 
		case 115: return "VolumetricLighting"; 
		case 116: return "RenderTarget"; 
		case 117: return "PtLife"; 
		case 118: return "PtBehavior"; 
		case 119: return "PtBehaviorClip"; 
		case 120: return "PlayEfx"; 
		case 121: return "FadeByAngle"; 
		case 122: return "FadeByAngleExpression"; 
		case 123: return "FadeByEmitterAngle"; 
		case 124: return "FadeByDepth"; 
		case 125: return "FadeByDepthExpression"; 
		case 126: return "FadeByOcclusion"; 
		case 127: return "FadeByOcclusionExpression"; 
		case 128: return "FakeDoF"; 
		case 129: return "LuminanceBleed"; 
		case 130: return "ScaleByDepth"; 
		case 131: return "TypeNodeBillboard"; 
		case 132: return "TypeNodeBillboardExpression"; 
		case 133: return "UnitCulling"; 
		case 134: return "FluidEmitter2D"; 
		case 135: return "FluidEmitter2DClip"; 
		case 136: return "FluidEmitter2DExpression"; 
		case 137: return "FluidSimulator2D"; 
		case 138: return "PlayEmitter"; 
		case 139: return "PtTransform3D"; 
		case 140: return "PtTransform3DClip"; 
		case 141: return "PtTransform2D"; 
		case 142: return "PtTransform2DClip"; 
		case 143: return "PtVelocity3D"; 
		case 144: return "PtVelocity3DClip"; 
		case 145: return "PtVelocity2D"; 
		case 146: return "PtVelocity2DClip"; 
		case 147: return "PtColliderAction"; 
		case 148: return "PtCollision"; 
		case 149: return "PtColor"; 
		case 150: return "PtColorClip"; 
		case 151: return "PtUvSequence"; 
		case 152: return "PtUvSequenceClip"; 
		case 153: return "MeshEmitter"; 
		case 154: return "MeshEmitterClip"; 
		case 155: return "MeshEmitterExpression"; 
		case 156: return "ScreenSpaceEmitter"; 
		case 157: return "VectorFieldParameter"; 
		case 158: return "VectorFieldParameterClip"; 
		case 159: return "VectorFieldParameterExpression"; 
		case 160: return "GlobalVectorField"; 
		case 161: return "GlobalVectorFieldClip"; 
		case 162: return "GlobalVectorFieldExpression"; 
		case 163: return "DirectionalFieldParameter"; 
		case 164: return "DirectionalFieldParameterClip"; 
		case 165: return "DirectionalFieldParameterExpression"; 
		case 166: return "DepthOperator"; 
		case 167: return "PlaneCollider"; 
		case 168: return "PlaneColliderExpression"; 
		case 169: return "DepthOcclusion"; 
		case 170: return "ShapeOperator"; 
		case 171: return "ShapeOperatorExpression"; 
		case 172: return "WindInfluence3DDelayFrame"; 
		case 173: return "WindInfluence3D"; 
		case 174: return "Attractor"; 
		case 175: return "AttractorClip"; 
		case 176: return "AttractorExpression"; 
		case 177: return "CustomComputeShader"; 
		case 178: return "TypeGpuBillboard"; 
		case 179: return "TypeGpuBillboardExpression"; 
		case 180: return "TypeGpuPolygon"; 
		case 181: return "TypeGpuPolygonExpression"; 
		case 182: return "TypeGpuRibbonFollow"; 
		case 183: return "TypeGpuRibbonFollowExpression"; 
		case 184: return "TypeGpuRibbonLength"; 
		case 185: return "TypeGpuRibbonLengthExpression"; 
		case 186: return "TypeGpuMesh"; 
		case 187: return "TypeGpuMeshExpression"; 
		case 188: return "TypeGpuMeshTrail"; 
		case 189: return "TypeGpuMeshTrailClip"; 
		case 190: return "TypeGpuMeshTrailExpression"; 
		case 191: return "TypeGpuLightning3D"; 
		case 192: return "EmitterPriority"; 
		case 193: return "DrawOverlay"; 
		case 194: return "VectorField"; 
		case 195: return "VolumeField"; 
		case 196: return "DirectionalField"; 
		case 197: return "AngularVelocity3DDelayFrame"; 
		case 198: return "AngularVelocity3D"; 
		case 199: return "PtAngularVelocity3D"; 
		case 200: return "PtAngularVelocity3DExpression"; 
		case 201: return "AngularVelocity2DDelayFrame"; 
		case 202: return "AngularVelocity2D"; 
		case 203: return "PtAngularVelocity2D"; 
		case 204: return "PtAngularVelocity2DExpression"; 
		case 205: return "IgnorePlayerColor"; 
		case 206: return "ProceduralDistortionDelayFrame"; 
		case 207: return "ProceduralDistortion"; 
		case 208: return "ProceduralDistortionClip"; 
		case 209: return "ProceduralDistortionExpression"; 
		case 210: return "TestBehaviorUpdater"; 
		case 211: return "StretchBlur"; 
		case 212: return "StretchBlurExpression"; 
		case 213: return "EmitterHSV"; 
		case 214: return "EmitterHSVExpression"; 
		case 215: return "FlowMap"; 
		case 216: return "RgbCommon"; 
		case 217: return "RgbWater"; 
		case 218: return "PtFreezer"; 
		case 219: return "AssignCSV"; 
		case 220: return "EmitMask"; 
		case 221: return "TypeModularBillboard"; 
		case 222: return "TypeModularRibbonFollow"; 
		case 223: return "TypeModularRibbonLength"; 
		case 224: return "TypeModularPolygon"; 
		case 225: return "TypeModularMesh"; 
		case 226: return "ItemNum"; 
		default: return "";
	}
}
string getStructNameRERT(uint itemType)
{
	switch(itemType)
	{
		case 1: return "FixRandomGenerator"; 
		case 2: return "EffectShader"; 
		case 3: return "Spawn"; 
		case 4: return "SpawnExpression"; 
		case 5: return "Transform2D"; 
		case 6: return "Transform2DModifierDelayFrame"; 
		case 7: return "Transform2DModifier"; 
		case 8: return "Transform2DClip"; 
		case 9: return "Transform2DExpression"; 
		case 10: return "Transform3D"; 
		case 11: return "Transform3DModifierDelayFrame"; 
		case 12: return "Transform3DModifier"; 
		case 13: return "Transform3DClip"; 
		case 14: return "Transform3DExpression"; 
		case 15: return "ParentOptions"; 
		case 16: return "EmitterColor"; 
		case 17: return "EmitterColorClip"; 
		case 18: return "PtSort"; 
		case 19: return "TypeBillboard2D"; 
		case 20: return "TypeBillboard2DExpression"; 
		case 21: return "TypeBillboard3D"; 
		case 22: return "TypeBillboard3DExpression"; 
		case 23: return "TypeBillboard3DMaterial"; 
		case 24: return "TypeBillboard3DMaterialClip"; 
		case 25: return "TypeBillboard3DMaterialExpression"; 
		case 26: return "TypeMesh"; 
		case 27: return "TypeMeshClip"; 
		case 28: return "TypeMeshExpression"; 
		case 29: return "TypeRibbonFollow"; 
		case 30: return "TypeRibbonLength"; 
		case 31: return "TypeRibbonChain"; 
		case 32: return "TypeRibbonFixEnd"; 
		case 33: return "TypeRibbonLightweight"; 
		case 34: return "TypeRibbonParticle"; 
		case 35: return "TypeRibbonFollowMaterial"; 
		case 36: return "TypeRibbonFollowMaterialClip"; 
		case 37: return "TypeRibbonFollowMaterialExpression"; 
		case 38: return "TypeRibbonLengthMaterial"; 
		case 39: return "TypeRibbonLengthMaterialClip"; 
		case 40: return "TypeRibbonLengthMaterialExpression"; 
		case 41: return "TypeRibbonChainMaterial"; 
		case 42: return "TypeRibbonChainMaterialClip"; 
		case 43: return "TypeRibbonChainMaterialExpression"; 
		case 44: return "TypeRibbonFixEndMaterial"; 
		case 45: return "TypeRibbonFixEndMaterialClip"; 
		case 46: return "TypeRibbonFixEndMaterialExpression"; 
		case 47: return "TypeRibbonLightweightMaterial"; 
		case 48: return "TypeRibbonLightweightMaterialClip"; 
		case 49: return "TypeRibbonLightweightMaterialExpression"; 
		case 50: return "TypeStrainRibbonMaterial"; 
		case 51: return "TypeStrainRibbonMaterialClip"; 
		case 52: return "TypeStrainRibbonMaterialExpression"; 
		case 53: return "TypeRibbonFollowExpression"; 
		case 54: return "TypeRibbonLengthExpression"; 
		case 55: return "TypeRibbonChainExpression"; 
		case 56: return "TypeRibbonFixEndExpression"; 
		case 57: return "TypeRibbonLightweightExpression"; 
		case 58: return "TypeRibbonParticleExpression"; 
		case 59: return "TypePolygon"; 
		case 60: return "TypePolygonClip"; 
		case 61: return "TypePolygonExpression"; 
		case 62: return "TypePolygonMaterial"; 
		case 63: return "TypePolygonMaterialExpression"; 
		case 65: return "TypeRibbonTrail"; 
		case 66: return "TypePolygonTrail"; 
		case 67: return "TypePolygonTrailMaterial"; 
		case 70: return "TypeNoDraw"; 
		case 71: return "TypeNoDrawExpression"; 
		case 72: return "Velocity2DDelayFrame"; 
		case 73: return "Velocity2D"; 
		case 74: return "Velocity2DExpression"; 
		case 75: return "Velocity3DDelayFrame"; 
		case 76: return "Velocity3D"; 
		case 77: return "Velocity3DExpression"; 
		case 78: return "RotateAnimDelayFrame"; 
		case 79: return "RotateAnim"; 
		case 80: return "RotateAnimExpression"; 
		case 81: return "ScaleAnimDelayFrame"; 
		case 82: return "ScaleAnim"; 
		case 83: return "ScaleAnimExpression"; 
		case 84: return "VanishArea3D"; 
		case 85: return "VanishArea3DExpression"; 
		case 86: return "Life"; 
		case 87: return "LifeExpression"; 
		case 88: return "UVSequence"; 
		case 89: return "UVSequenceModifier"; 
		case 90: return "UVSequenceExpression"; 
		case 91: return "UVScroll"; 
		case 92: return "TextureUnit"; 
		case 93: return "TextureUnitExpression"; 
		case 94: return "TextureFilter"; 
		case 95: return "EmitterShape2D"; 
		case 96: return "EmitterShape2DExpression"; 
		case 97: return "EmitterShape3D"; 
		case 98: return "EmitterShape3DExpression"; 
		case 99: return "AlphaCorrection"; 
		case 100: return "ContrastHighlighter"; 
		case 101: return "ColorGrading"; 
		case 102: return "Blink"; 
		case 103: return "Noise"; 
		case 104: return "NoiseExpression"; 
		case 105: return "TexelChannelOperator"; 
		case 106: return "TexelChannelOperatorClip"; 
		case 107: return "TexelChannelOperatorExpression"; 
		case 108: return "TypeStrainRibbon"; 
		case 109: return "TypeStrainRibbonExpression"; 
		case 110: return "TypeLightning3D"; 
		case 111: return "TypeLightning3DExpression"; 
		case 112: return "TypeLightning3DMaterial"; 
		case 113: return "ShaderSettings"; 
		case 114: return "ShaderSettingsExpression"; 
		case 115: return "Distortion"; 
		case 116: return "DistortionExpression"; 
		case 118: return "RenderTarget"; 
		case 119: return "PtLife"; 
		case 120: return "PtBehavior"; 
		case 121: return "PtBehaviorClip"; 
		case 122: return "PlayEfx"; 
		case 123: return "FadeByAngle"; 
		case 124: return "FadeByAngleExpression"; 
		case 125: return "FadeByEmitterAngle"; 
		case 126: return "FadeByDepth"; 
		case 127: return "FadeByDepthExpression"; 
		case 128: return "FadeByOcclusion"; 
		case 129: return "FadeByOcclusionExpression"; 
		case 130: return "FakeDoF"; 
		case 131: return "LuminanceBleed"; 
		case 133: return "TypeNodeBillboard"; 
		case 134: return "TypeNodeBillboardExpression"; 
		case 135: return "UnitCulling"; 
		case 136: return "FluidEmitter2D"; 
		case 139: return "FluidSimulator2D"; 
		case 140: return "PlayEmitter"; 
		case 141: return "PtTransform3D"; 
		case 142: return "PtTransform3DClip"; 
		case 145: return "PtVelocity3D"; 
		case 146: return "PtVelocity3DClip"; 
		case 147: return "PtVelocity2D"; 
		case 148: return "PtVelocity2DClip"; 
		case 149: return "PtColliderAction"; 
		case 150: return "PtCollision"; 
		case 151: return "PtColor"; 
		case 152: return "PtColorClip"; 
		case 153: return "PtUvSequence"; 
		case 154: return "PtUvSequenceClip"; 
		case 155: return "MeshEmitter"; 
		case 156: return "MeshEmitterClip"; 
		case 157: return "MeshEmitterExpression"; 
		case 158: return "ScreenSpaceEmitter"; 
		case 159: return "VectorFieldParameter"; 
		case 161: return "VectorFieldParameterClip"; 
		case 162: return "VectorFieldParameterExpression"; 
		case 168: return "DepthOperator"; 
		case 176: return "Attractor"; 
		case 177: return "AttractorClip"; 
		case 178: return "AttractorExpression"; 
		case 181: return "EmitterPriority"; 
		case 182: return "DrawOverlay"; 
		case 186: return "AngularVelocity3DDelayFrame"; 
		case 187: return "AngularVelocity3D"; 
		case 189: return "PtAngularVelocity3D"; 
		case 191: return "AngularVelocity2DDelayFrame"; 
		case 192: return "AngularVelocity2D"; 
		case 193: return "PtPathTranslate"; 
		case 194: return "IgnorePlayerColor"; 
		case 198: return "ProceduralDistortionDelayFrame"; 
		case 199: return "ProceduralDistortion"; 
		case 200: return "ProceduralDistortionClip"; 
		case 201: return "ProceduralDistortionExpression"; 
		case 219: return "TypeGpuBillboard"; 
		case 220: return "TypeGpuBillboardExpression"; 
		case 221: return "TypeGpuPolygon"; 
		case 222: return "TypeGpuPolygonExpression"; 
		case 223: return "TypeGpuRibbonFollow"; 
		case 224: return "TypeGpuRibbonFollowExpression"; 
		case 225: return "TypeGpuRibbonLength"; 
		case 226: return "TypeGpuRibbonLengthExpression"; 
		case 227: return "TypeGpuMesh"; 
		case 228: return "TypeGpuMeshExpression"; 
		case 229: return "TypeGpuMeshTrail"; 
		case 230: return "TypeGpuMeshTrailClip"; 
		case 231: return "TypeGpuMeshTrailExpression"; 
		case 233: return "UnknownRERT_233"; 
		default: return "";
	}
}
string getStructNameMHRiseSB(uint itemType)
{
	switch(itemType)
	{
		case 1: return "FixRandomGenerator"; 
		case 2: return "EffectShader"; 
		case 3: return "Spawn"; 
		case 4: return "SpawnExpression"; 
		case 5: return "Transform2D"; 
		case 6: return "Transform2DModifierDelayFrame"; 
		case 7: return "Transform2DModifier"; 
		case 8: return "Transform2DClip"; 
		case 9: return "Transform2DExpression"; 
		case 10: return "Transform3D"; 
		case 11: return "Transform3DModifierDelayFrame"; 
		case 12: return "Transform3DModifier"; 
		case 13: return "Transform3DClip"; 
		case 14: return "Transform3DExpression"; 
		case 15: return "ParentOptions"; 
		case 16: return "EmitterColor"; 
		case 17: return "EmitterColorClip"; 
		case 18: return "PtSort"; 
		case 19: return "TypeBillboard2D"; 
		case 20: return "TypeBillboard2DExpression"; 
		case 21: return "TypeBillboard3D"; 
		case 22: return "TypeBillboard3DExpression"; 
		case 23: return "TypeBillboard3DMaterial"; 
		case 24: return "TypeBillboard3DMaterialClip"; 
		case 25: return "TypeBillboard3DMaterialExpression"; 
		case 26: return "TypeMesh"; 
		case 27: return "TypeMeshClip"; 
		case 28: return "TypeMeshExpression"; 
		case 29: return "TypeRibbonFollow"; 
		case 30: return "TypeRibbonLength"; 
		case 31: return "TypeRibbonChain"; 
		case 32: return "TypeRibbonFixEnd"; 
		case 33: return "TypeRibbonLightweight"; 
		case 34: return "TypeRibbonParticle"; 
		case 35: return "TypeRibbonFollowMaterial"; 
		case 36: return "TypeRibbonFollowMaterialClip"; 
		case 37: return "TypeRibbonFollowMaterialExpression"; 
		case 38: return "TypeRibbonLengthMaterial"; 
		case 39: return "TypeRibbonLengthMaterialClip"; 
		case 40: return "TypeRibbonLengthMaterialExpression"; 
		case 41: return "TypeRibbonChainMaterial"; 
		case 42: return "TypeRibbonChainMaterialClip"; 
		case 43: return "TypeRibbonChainMaterialExpression"; 
		case 44: return "TypeRibbonFixEndMaterial"; 
		case 45: return "TypeRibbonFixEndMaterialClip"; 
		case 46: return "TypeRibbonFixEndMaterialExpression"; 
		case 47: return "TypeRibbonLightweightMaterial"; 
		case 48: return "TypeRibbonLightweightMaterialClip"; 
		case 49: return "TypeRibbonLightweightMaterialExpression"; 
		case 50: return "TypeStrainRibbonMaterial"; 
		case 51: return "TypeStrainRibbonMaterialClip"; 
		case 52: return "TypeStrainRibbonMaterialExpression"; 
		case 53: return "TypeRibbonFollowExpression"; 
		case 54: return "TypeRibbonLengthExpression"; 
		case 55: return "TypeRibbonChainExpression"; 
		case 56: return "TypeRibbonFixEndExpression"; 
		case 59: return "TypePolygon"; 
		case 60: return "TypePolygonClip"; 
		case 61: return "TypePolygonExpression"; 
		case 62: return "TypePolygonMaterial"; 
		case 66: return "TypePolygonTrail"; 
		case 67: return "TypePolygonTrailMaterial"; 
		case 70: return "TypeNoDraw"; 
		case 71: return "TypeNoDrawExpression"; 
		case 72: return "Velocity2DDelayFrame"; 
		case 73: return "Velocity2D"; 
		case 74: return "Velocity2DExpression"; 
		case 75: return "Velocity3DDelayFrame"; 
		case 76: return "Velocity3D"; 
		case 77: return "Velocity3DExpression"; 
		case 78: return "RotateAnimDelayFrame"; 
		case 79: return "RotateAnim"; 
		case 80: return "RotateAnimExpression"; 
		case 81: return "ScaleAnimDelayFrame"; 
		case 82: return "ScaleAnim"; 
		case 83: return "ScaleAnimExpression"; 
		case 84: return "VanishArea3D"; 
		case 85: return "VanishArea3DExpression"; 
		case 86: return "Life"; 
		case 87: return "LifeExpression"; 
		case 88: return "UVSequence"; 
		case 89: return "UVSequenceModifier"; 
		case 90: return "UVSequenceExpression"; 
		case 91: return "UVScroll"; 
		case 92: return "TextureUnit"; 
		case 93: return "TextureUnitExpression"; 
		case 94: return "TextureFilter"; 
		case 95: return "EmitterShape2D"; 
		case 96: return "EmitterShape2DExpression"; 
		case 97: return "EmitterShape3D"; 
		case 98: return "EmitterShape3DExpression"; 
		case 99: return "AlphaCorrection"; 
		case 100: return "ContrastHighlighter"; 
		case 101: return "ColorGrading"; 
		case 102: return "Blink"; 
		case 103: return "Noise"; 
		case 104: return "NoiseExpression"; 
		case 105: return "TexelChannelOperator"; 
		case 106: return "TexelChannelOperatorClip"; 
		case 107: return "TexelChannelOperatorExpression"; 
		case 108: return "TypeStrainRibbon"; 
		case 109: return "TypeStrainRibbonExpression"; 
		case 110: return "TypeLightning3D"; 
		case 111: return "TypeLightning3DExpression"; 
		case 112: return "TypeLightning3DMaterial"; 
		case 113: return "ShaderSettings"; 
		case 114: return "ShaderSettingsExpression"; 
		case 115: return "Distortion"; 
		case 116: return "DistortionExpression"; 
		case 118: return "RenderTarget"; 
		case 120: return "PtLife"; 
		case 121: return "PtBehavior"; 
		case 122: return "PtBehaviorClip"; 
		case 123: return "PlayEfx"; 
		case 124: return "FadeByAngle"; 
		case 125: return "FadeByAngleExpression"; 
		case 126: return "FadeByEmitterAngle"; 
		case 127: return "FadeByDepth"; 
		case 128: return "FadeByDepthExpression"; 
		case 129: return "FadeByOcclusion"; 
		case 130: return "FadeByOcclusionExpression"; 
		case 131: return "FakeDoF"; 
		case 132: return "LuminanceBleed"; 
		case 133: return "ScaleByDepth"; 
		case 134: return "TypeNodeBillboard"; 
		case 135: return "TypeNodeBillboardExpression"; 
		case 136: return "UnitCulling"; 
		case 141: return "PlayEmitter"; 
		case 142: return "PtTransform3D"; 
		case 143: return "PtTransform3DClip"; 
		case 146: return "PtVelocity3D"; 
		case 147: return "PtVelocity3DClip"; 
		case 152: return "PtColor"; 
		case 153: return "PtColorClip"; 
		case 154: return "PtUvSequence"; 
		case 155: return "PtUvSequenceClip"; 
		case 156: return "MeshEmitter"; 
		case 157: return "MeshEmitterClip"; 
		case 158: return "MeshEmitterExpression"; 
		case 159: return "ScreenSpaceEmitter"; 
		case 160: return "VectorFieldParameter"; 
		case 161: return "VectorFieldParameterClip"; 
		case 162: return "VectorFieldParameterExpression"; 
		case 168: return "DepthOperator"; 
		case 177: return "Attractor"; 
		case 178: return "AttractorClip"; 
		case 179: return "AttractorExpression"; 
		case 182: return "EmitterPriority"; 
		case 187: return "AngularVelocity3DDelayFrame"; 
		case 188: return "AngularVelocity3D"; 
		case 189: return "PtAngularVelocity3D"; 
		case 191: return "AngularVelocity2DDelayFrame"; 
		case 192: return "AngularVelocity2D"; 
		case 195: return "PtPathTranslate"; 
		case 196: return "IgnorePlayerColor"; 
		case 198: return "ProceduralDistortionDelayFrame"; 
		case 199: return "ProceduralDistortion"; 
		case 200: return "ProceduralDistortionClip"; 
		case 201: return "ProceduralDistortionExpression"; 
		case 202: return "TestBehaviorUpdater"; 
		case 203: return "StretchBlur"; 
		case 204: return "StretchBlurExpression"; 
		case 205: return "EmitterHSV"; 
		case 206: return "EmitterHSVExpression"; 
		case 221: return "TypeGpuBillboard"; 
		case 222: return "TypeGpuBillboardExpression"; 
		case 223: return "TypeGpuPolygon"; 
		case 225: return "TypeGpuRibbonFollow"; 
		case 227: return "TypeGpuRibbonLength"; 
		case 229: return "TypeGpuMesh"; 
		case 230: return "TypeGpuMeshExpression"; 
		case 231: return "TypeGpuMeshTrail"; 
		case 232: return "TypeGpuMeshTrailClip"; 
		case 233: return "TypeGpuMeshTrailExpression"; 
		case 234: return "TypeGpuLightning3D"; 
		default: return "";
	}
}
string getStructNameSF6(uint itemType)
{
	switch(itemType)
	{
		case 1: return "FixRandomGenerator"; 
		default: return "";
	}
}
string getStructNameRE4(uint itemType)
{
	switch(itemType)
	{
		case 1: return "FixRandomGenerator"; 
		case 2: return "EffectShader"; 
		case 4: return "Transform2D"; 
		case 5: return "Transform2DModifierDelayFrame"; 
		case 6: return "Transform2DModifier"; 
		case 7: return "Transform2DClip"; 
		case 8: return "Transform2DExpression"; 
		case 9: return "Transform3D"; 
		case 10: return "Transform3DModifierDelayFrame"; 
		case 11: return "Transform3DModifier"; 
		case 12: return "Transform3DClip"; 
		case 13: return "Transform3DExpression"; 
		case 14: return "ParentOptions"; 
		case 16: return "Spawn"; 
		case 17: return "SpawnExpression"; 
		case 18: return "EmitterColor"; 
		case 19: return "EmitterColorClip"; 
		case 20: return "PtSort"; 
		case 21: return "TypeBillboard2D"; 
		case 22: return "TypeBillboard2DExpression"; 
		case 23: return "TypeBillboard3D"; 
		case 24: return "TypeBillboard3DExpression"; 
		case 25: return "TypeBillboard3DMaterial"; 
		case 26: return "TypeBillboard3DMaterialClip"; 
		case 27: return "TypeBillboard3DMaterialExpression"; 
		case 28: return "TypeMesh"; 
		case 29: return "TypeMeshClip"; 
		case 30: return "TypeMeshExpression"; 
		case 31: return "TypeRibbonFollow"; 
		case 32: return "TypeRibbonLength"; 
		case 33: return "TypeRibbonChain"; 
		case 34: return "TypeRibbonFixEnd"; 
		case 58: return "TypeRibbonLengthExpression"; 
		case 60: return "TypeRibbonFixEndExpression"; 
		case 63: return "TypePolygon"; 
		case 64: return "TypePolygonClip"; 
		case 65: return "TypePolygonExpression"; 
		case 69: return "TypeRibbonTrail"; 
		case 70: return "TypePolygonTrail"; 
		case 71: return "TypePolygonTrailExpression"; 
		case 73: return "TypePolygonTrailMaterial"; 
		case 74: return "TypePolygonTrailMaterialExpression"; 
		case 75: return "TypeNoDraw"; 
		case 76: return "TypeNoDrawExpression"; 
		case 77: return "Velocity2DDelayFrame"; 
		case 78: return "Velocity2D"; 
		case 79: return "Velocity2DExpression"; 
		case 80: return "Velocity3DDelayFrame"; 
		case 81: return "Velocity3D"; 
		case 82: return "Velocity3DExpression"; 
		case 83: return "RotateAnimDelayFrame"; 
		case 84: return "RotateAnim"; 
		case 85: return "RotateAnimExpression"; 
		case 86: return "ScaleAnimDelayFrame"; 
		case 87: return "ScaleAnim"; 
		case 88: return "ScaleAnimExpression"; 
		case 89: return "VanishArea3D"; 
		case 90: return "VanishArea3DExpression"; 
		case 91: return "Life"; 
		case 92: return "LifeExpression"; 
		case 93: return "UVSequence"; 
		case 94: return "UVSequenceModifier"; 
		case 95: return "UVSequenceExpression"; 
		case 96: return "UVScroll"; 
		case 97: return "TextureUnit"; 
		case 98: return "TextureUnitExpression"; 
		case 99: return "TextureFilter"; 
		case 100: return "EmitterShape2D"; 
		case 101: return "EmitterShape2DExpression"; 
		case 102: return "EmitterShape3D"; 
		case 103: return "EmitterShape3DExpression"; 
		case 104: return "AlphaCorrection"; 
		case 105: return "ContrastHighlighter"; 
		case 108: return "Blink"; 
		case 109: return "Noise"; 
		case 110: return "NoiseExpression"; 
		case 111: return "TexelChannelOperator"; 
		case 112: return "TexelChannelOperatorClip"; 
		case 113: return "TexelChannelOperatorExpression"; 
		case 114: return "TypeStrainRibbon"; 
		case 123: return "ShaderSettings"; 
		case 124: return "ShaderSettingsExpression"; 
		case 125: return "Distortion"; 
		case 126: return "DistortionExpression"; 
		case 127: return "VolumetricLighting"; 
		case 128: return "RenderTarget"; 
		case 130: return "UnitCulling"; 
		case 131: return "PtLife"; 
		case 132: return "PtBehavior"; 
		case 133: return "PtBehaviorClip"; 
		case 134: return "PlayEfx"; 
		case 135: return "FadeByAngle"; 
		case 136: return "FadeByAngleExpression"; 
		case 137: return "FadeByEmitterAngle"; 
		case 138: return "FadeByDepth"; 
		case 139: return "FadeByDepthExpression"; 
		case 140: return "FadeByOcclusion"; 
		case 141: return "FadeByOcclusionExpression"; 
		case 142: return "FakeDoF"; 
		case 143: return "LuminanceBleed"; 
		case 144: return "ScaleByDepth"; 
		case 150: return "FluidSimulator2D"; 
		case 151: return "PlayEmitter"; 
		case 152: return "PtTransform3D"; 
		case 153: return "PtTransform3DClip"; 
		case 155: return "PtTransform2D"; 
		case 157: return "PtVelocity3D"; 
		case 158: return "PtVelocity3DClip"; 
		case 159: return "PtVelocity2D"; 
		case 160: return "PtVelocity2DClip"; 
		case 161: return "PtColliderAction"; 
		case 162: return "PtCollision"; 
		case 164: return "PtColor"; 
		case 165: return "PtColorClip"; 
		case 168: return "PtUvSequence"; 
		case 169: return "PtUvSequenceClip"; 
		case 170: return "MeshEmitter"; 
		case 171: return "MeshEmitterClip"; 
		case 172: return "MeshEmitterExpression"; 
		case 173: return "ScreenSpaceEmitter"; 
		case 175: return "VectorFieldParameter"; 
		case 176: return "VectorFieldParameterClip"; 
		case 177: return "VectorFieldParameterExpression"; 
		case 184: return "DepthOperator"; 
		case 185: return "PlaneCollider"; 
		case 187: return "DepthOcclusion"; 
		case 191: return "WindInfluence3D"; 
		case 192: return "Attractor"; 
		case 193: return "AttractorClip"; 
		case 194: return "AttractorExpression"; 
		case 195: return "PtVortexelWind"; 
		case 197: return "UnknownRE4_197"; 
		case 200: return "EmitterPriority"; 
		case 201: return "DrawOverlay"; 
		case 205: return "AngularVelocity3DDelayFrame"; 
		case 206: return "AngularVelocity3D"; 
		case 210: return "AngularVelocity2D"; 
		case 213: return "PtPathTranslate"; 
		case 216: return "ProceduralDistortionDelayFrame"; 
		case 217: return "ProceduralDistortion"; 
		case 219: return "ProceduralDistortionExpression"; 
		case 220: return "TestBehaviorUpdater"; 
		case 221: return "StretchBlur"; 
		case 222: return "StretchBlurExpression"; 
		case 226: return "RgbCommon"; 
		case 228: return "RgbWater"; 
		case 231: return "AssignCSV"; 
		case 243: return "TypeGpuBillboard"; 
		case 244: return "TypeGpuBillboardExpression"; 
		case 245: return "TypeGpuPolygon"; 
		case 247: return "TypeGpuRibbonFollow"; 
		case 248: return "TypeGpuRibbonFollowExpression"; 
		case 249: return "TypeGpuRibbonLength"; 
		case 251: return "TypeGpuMesh"; 
		case 252: return "TypeGpuMeshExpression"; 
		default: return "";
	}
}
string getStructNameDD2(uint itemType)
{
	switch(itemType)
	{
		case 1: return "FixRandomGenerator"; 
		case 2: return "EffectShader"; 
		case 4: return "Transform2D"; 
		case 6: return "Transform2DModifier"; 
		case 7: return "Transform2DClip"; 
		case 8: return "Transform2DExpression"; 
		case 9: return "Transform3D"; 
		case 10: return "Transform3DModifierDelayFrame"; 
		case 11: return "Transform3DModifier"; 
		case 12: return "Transform3DClip"; 
		case 13: return "Transform3DExpression"; 
		case 14: return "ParentOptions"; 
		case 15: return "ParentOptionsExpression"; 
		case 16: return "Spawn"; 
		case 17: return "SpawnExpression"; 
		case 18: return "EmitterColor"; 
		case 19: return "EmitterColorClip"; 
		case 21: return "PtSort"; 
		case 22: return "TypeBillboard2D"; 
		case 23: return "TypeBillboard2DExpression"; 
		case 24: return "TypeBillboard3D"; 
		case 25: return "TypeBillboard3DExpression"; 
		case 26: return "TypeBillboard3DMaterial"; 
		case 27: return "TypeBillboard3DMaterialClip"; 
		case 28: return "TypeBillboard3DMaterialExpression"; 
		case 29: return "TypeMesh"; 
		case 30: return "TypeMeshClip"; 
		case 31: return "TypeMeshExpression"; 
		case 32: return "TypeRibbonFollow"; 
		case 33: return "TypeRibbonLength"; 
		case 34: return "TypeRibbonChain"; 
		case 35: return "TypeRibbonFixEnd"; 
		case 36: return "TypeRibbonLightweight"; 
		case 37: return "TypeRibbonParticle"; 
		case 38: return "TypeRibbonFollowMaterial"; 
		case 39: return "TypeRibbonFollowMaterialClip"; 
		case 40: return "TypeRibbonFollowMaterialExpression"; 
		case 41: return "TypeRibbonLengthMaterial"; 
		case 42: return "TypeRibbonLengthMaterialClip"; 
		case 43: return "TypeRibbonLengthMaterialExpression"; 
		case 44: return "TypeRibbonChainMaterial"; 
		case 45: return "TypeRibbonChainMaterialClip"; 
		case 46: return "TypeRibbonChainMaterialExpression"; 
		case 47: return "TypeRibbonFixEndMaterial"; 
		case 48: return "TypeRibbonFixEndMaterialClip"; 
		case 49: return "TypeRibbonFixEndMaterialExpression"; 
		case 50: return "TypeRibbonLightweightMaterial"; 
		case 51: return "TypeRibbonLightweightMaterialClip"; 
		case 52: return "TypeRibbonLightweightMaterialExpression"; 
		case 53: return "TypeStrainRibbonMaterial"; 
		case 54: return "TypeStrainRibbonMaterialClip"; 
		case 55: return "TypeStrainRibbonMaterialExpression"; 
		case 56: return "TypeRibbonParticleMaterial"; 
		case 57: return "TypeRibbonParticleMaterialClip"; 
		case 58: return "TypeRibbonParticleMaterialExpression"; 
		case 59: return "TypeRibbonFollowExpression"; 
		case 60: return "TypeRibbonLengthExpression"; 
		case 61: return "TypeRibbonChainExpression"; 
		case 62: return "TypeRibbonFixEndExpression"; 
		case 64: return "TypeRibbonParticleExpression"; 
		case 65: return "TypePolygon"; 
		case 66: return "TypePolygonClip"; 
		case 67: return "TypePolygonExpression"; 
		case 68: return "TypePolygonMaterial"; 
		case 72: return "TypePolygonTrail"; 
		case 73: return "TypePolygonTrailExpression"; 
		case 74: return "TypePolygonTrailMaterial"; 
		case 76: return "TypePolygonTrailMaterialExpression"; 
		case 77: return "TypeNoDraw"; 
		case 78: return "TypeNoDrawExpression"; 
		case 79: return "Velocity2DDelayFrame"; 
		case 80: return "Velocity2D"; 
		case 81: return "Velocity2DExpression"; 
		case 82: return "Velocity3DDelayFrame"; 
		case 83: return "Velocity3D"; 
		case 84: return "Velocity3DExpression"; 
		case 85: return "RotateAnimDelayFrame"; 
		case 86: return "RotateAnim"; 
		case 87: return "RotateAnimExpression"; 
		case 88: return "ScaleAnimDelayFrame"; 
		case 89: return "ScaleAnim"; 
		case 90: return "ScaleAnimExpression"; 
		case 91: return "VanishArea3D"; 
		case 92: return "VanishArea3DExpression"; 
		case 93: return "Life"; 
		case 94: return "LifeExpression"; 
		case 95: return "UVSequence"; 
		case 96: return "UVSequenceModifier"; 
		case 97: return "UVSequenceExpression"; 
		case 98: return "UVScroll"; 
		case 99: return "TextureUnit"; 
		case 100: return "TextureUnitExpression"; 
		case 101: return "TextureFilter"; 
		case 102: return "EmitterShape2D"; 
		case 103: return "EmitterShape2DExpression"; 
		case 104: return "EmitterShape3D"; 
		case 105: return "EmitterShape3DExpression"; 
		case 106: return "AlphaCorrection"; 
		case 107: return "ContrastHighlighter"; 
		case 108: return "ColorGrading"; 
		case 110: return "Blink"; 
		case 111: return "Noise"; 
		case 112: return "NoiseExpression"; 
		case 113: return "TexelChannelOperator"; 
		case 114: return "TexelChannelOperatorClip"; 
		case 115: return "TexelChannelOperatorExpression"; 
		case 116: return "TypeStrainRibbon"; 
		case 117: return "TypeStrainRibbonExpression"; 
		case 118: return "TypeLightning3D"; 
		case 119: return "TypeLightning3DExpression"; 
		case 120: return "TypeLightning3DMaterial"; 
		case 121: return "TypeLightning3DMaterialClip"; 
		case 122: return "TypeLightning3DMaterialExpression"; 
		case 126: return "ShaderSettings"; 
		case 127: return "ShaderSettingsExpression"; 
		case 128: return "Distortion"; 
		case 129: return "DistortionExpression"; 
		case 133: return "UnitCulling"; 
		case 134: return "UnitCullingExpression"; 
		case 135: return "PtLife"; 
		case 136: return "PtBehavior"; 
		case 137: return "PtBehaviorClip"; 
		case 138: return "PlayEfx"; 
		case 139: return "FadeByAngle"; 
		case 140: return "FadeByAngleExpression"; 
		case 141: return "FadeByEmitterAngle"; 
		case 142: return "FadeByDepth"; 
		case 143: return "FadeByDepthExpression"; 
		case 144: return "FadeByOcclusion"; 
		case 145: return "FadeByOcclusionExpression"; 
		case 146: return "FadeByRootCulling"; 
		case 147: return "FakeDoF"; 
		case 148: return "LuminanceBleed"; 
		case 149: return "ScaleByDepth"; 
		case 150: return "TypeNodeBillboard"; 
		case 152: return "FluidEmitter2D"; 
		case 154: return "FluidEmitter2DExpression"; 
		case 155: return "FluidSimulator2D"; 
		case 157: return "PlayEmitter"; 
		case 158: return "PtTransform3D"; 
		case 159: return "PtTransform3DClip"; 
		case 160: return "PtTransform3DExpression"; 
		case 161: return "PtTransform2D"; 
		case 163: return "PtVelocity3D"; 
		case 164: return "PtVelocity3DClip"; 
		case 165: return "PtVelocity2D"; 
		case 166: return "PtVelocity2DClip"; 
		case 167: return "PtColliderAction"; 
		case 168: return "PtCollision"; 
		case 170: return "PtColor"; 
		case 171: return "PtColorClip"; 
		case 174: return "PtUvSequence"; 
		case 175: return "PtUvSequenceClip"; 
		case 176: return "MeshEmitter"; 
		case 179: return "ScreenSpaceEmitter"; 
		case 181: return "VectorFieldParameter"; 
		case 182: return "VectorFieldParameterClip"; 
		case 183: return "VectorFieldParameterExpression"; 
		case 190: return "DepthOperator"; 
		case 191: return "PlaneCollider"; 
		case 192: return "PlaneColliderExpression"; 
		case 193: return "DepthOcclusion"; 
		case 194: return "ShapeOperator"; 
		case 195: return "ShapeOperatorExpression"; 
		case 196: return "WindInfluence3DDelayFrame"; 
		case 197: return "WindInfluence3D"; 
		case 198: return "Attractor"; 
		case 199: return "AttractorClip"; 
		case 200: return "AttractorExpression"; 
		case 213: return "EmitterPriority"; 
		case 214: return "DrawOverlay"; 
		case 215: return "VectorField"; 
		case 216: return "VolumeField"; 
		case 217: return "DirectionalField"; 
		case 218: return "AngularVelocity3DDelayFrame"; 
		case 219: return "AngularVelocity3D"; 
		case 220: return "PtAngularVelocity3D"; 
		case 221: return "PtAngularVelocity3DExpression"; 
		case 222: return "AngularVelocity2DDelayFrame"; 
		case 223: return "AngularVelocity2D"; 
		case 224: return "PtAngularVelocity2D"; 
		case 225: return "PtAngularVelocity2DExpression"; 
		case 226: return "PtPathTranslate"; 
		case 227: return "IgnorePlayerColor"; 
		case 228: return "IgnoreSettings"; 
		case 229: return "ProceduralDistortionDelayFrame"; 
		case 230: return "ProceduralDistortion"; 
		case 231: return "ProceduralDistortionClip"; 
		case 232: return "ProceduralDistortionExpression"; 
		case 239: return "RgbCommon"; 
		case 240: return "RgbCommonExpression"; 
		case 241: return "RgbWater"; 
		case 243: return "PtFreezer"; 
		case 244: return "AssignCSV"; 
		case 245: return "DestinationCSV"; 
		case 247: return "TerrainSnap"; 
		case 249: return "EmitMask"; 
		case 250: return "UnknownDD2_250"; 
		case 252: return "TypeGpuBillboard"; 
		case 253: return "TypeGpuBillboardExpression"; 
		case 254: return "TypeGpuPolygon"; 
		case 255: return "TypeGpuPolygonExpression"; 
		case 256: return "TypeGpuRibbonFollow"; 
		case 257: return "TypeGpuRibbonFollowExpression"; 
		case 258: return "TypeGpuRibbonLength"; 
		case 259: return "TypeGpuRibbonLengthExpression"; 
		case 260: return "TypeGpuMesh"; 
		case 261: return "TypeGpuMeshClip"; 
		case 262: return "TypeGpuMeshExpression"; 
		case 263: return "TypeGpuMeshTrail"; 
		case 264: return "TypeGpuMeshTrailClip"; 
		case 265: return "TypeGpuMeshTrailExpression"; 
		case 266: return "TypeGpuLightning3D"; 
		default: return "";
	}
}
string getStructNameMHWilds(uint itemType)
{
	switch(itemType)
	{
		case 1: return "FixRandomGenerator"; 
		case 2: return "FixRandomGeneratorExpression"; 
		case 3: return "EffectShader"; 
		case 4: return "VortexelHeatReceiver"; 
		case 5: return "Transform2D"; 
		case 6: return "Transform2DModifierDelayFrame"; 
		case 7: return "Transform2DModifier"; 
		case 8: return "Transform2DClip"; 
		case 9: return "Transform2DExpression"; 
		case 10: return "Transform3D"; 
		case 11: return "Transform3DModifierDelayFrame"; 
		case 12: return "Transform3DModifier"; 
		case 13: return "Transform3DClip"; 
		case 14: return "Transform3DExpression"; 
		case 15: return "ParentOptions"; 
		case 16: return "ParentOptionsExpression"; 
		case 17: return "Spawn"; 
		case 18: return "SpawnExpression"; 
		case 19: return "EmitterColor"; 
		case 20: return "EmitterColorClip"; 
		case 22: return "PtSort"; 
		case 23: return "TypeBillboard2D"; 
		case 24: return "TypeBillboard2DExpression"; 
		case 25: return "TypeBillboard3D"; 
		case 26: return "TypeBillboard3DExpression"; 
		case 27: return "TypeBillboard3DMaterial"; 
		case 28: return "TypeBillboard3DMaterialClip"; 
		case 29: return "TypeBillboard3DMaterialExpression"; 
		case 30: return "TypeMesh"; 
		case 31: return "TypeMeshClip"; 
		case 32: return "TypeMeshExpression"; 
		case 33: return "TypeRibbonFollow"; 
		case 34: return "TypeRibbonLength"; 
		case 35: return "TypeRibbonChain"; 
		case 36: return "TypeRibbonFixEnd"; 
		case 37: return "TypeRibbonLightweight"; 
		case 38: return "TypeRibbonParticle"; 
		case 39: return "TypeRibbonFollowMaterial"; 
		case 40: return "TypeRibbonFollowMaterialClip"; 
		case 41: return "TypeRibbonFollowMaterialExpression"; 
		case 42: return "TypeRibbonLengthMaterial"; 
		case 43: return "TypeRibbonLengthMaterialClip"; 
		case 44: return "TypeRibbonLengthMaterialExpression"; 
		case 45: return "TypeRibbonChainMaterial"; 
		case 46: return "TypeRibbonChainMaterialClip"; 
		case 47: return "TypeRibbonChainMaterialExpression"; 
		case 48: return "TypeRibbonFixEndMaterial"; 
		case 49: return "TypeRibbonFixEndMaterialClip"; 
		case 50: return "TypeRibbonFixEndMaterialExpression"; 
		case 51: return "TypeRibbonLightweightMaterial"; 
		case 52: return "TypeRibbonLightweightMaterialClip"; 
		case 53: return "TypeRibbonLightweightMaterialExpression"; 
		case 54: return "TypeStrainRibbonMaterial"; 
		case 55: return "TypeStrainRibbonMaterialClip"; 
		case 56: return "TypeStrainRibbonMaterialExpression"; 
		case 57: return "TypeRibbonParticleMaterial"; 
		case 58: return "TypeRibbonParticleMaterialClip"; 
		case 59: return "TypeRibbonParticleMaterialExpression"; 
		case 60: return "TypeRibbonFollowExpression"; 
		case 61: return "TypeRibbonLengthExpression"; 
		case 62: return "TypeRibbonChainExpression"; 
		case 63: return "TypeRibbonFixEndExpression"; 
		case 64: return "TypeRibbonLightweightExpression"; 
		case 65: return "TypeRibbonParticleExpression"; 
		case 66: return "TypePolygon"; 
		case 67: return "TypePolygonClip"; 
		case 68: return "TypePolygonExpression"; 
		case 69: return "TypePolygonMaterial"; 
		case 70: return "TypePolygonMaterialClip"; 
		case 71: return "TypePolygonMaterialExpression"; 
		case 72: return "TypeRibbonTrail"; 
		case 73: return "TypePolygonTrail"; 
		case 74: return "TypePolygonTrailExpression"; 
		case 75: return "TypePolygonTrailMaterial"; 
		case 76: return "TypePolygonTrailMaterialClip"; 
		case 77: return "TypePolygonTrailMaterialExpression"; 
		case 78: return "TypeNoDraw"; 
		case 79: return "TypeNoDrawExpression"; 
		case 80: return "Velocity2DDelayFrame"; 
		case 81: return "Velocity2D"; 
		case 82: return "Velocity2DExpression"; 
		case 83: return "Velocity3DDelayFrame"; 
		case 84: return "Velocity3D"; 
		case 85: return "Velocity3DExpression"; 
		case 86: return "RotateAnimDelayFrame"; 
		case 87: return "RotateAnim"; 
		case 88: return "RotateAnimExpression"; 
		case 89: return "ScaleAnimDelayFrame"; 
		case 90: return "ScaleAnim"; 
		case 91: return "ScaleAnimExpression"; 
		case 92: return "VanishArea3D"; 
		case 93: return "VanishArea3DExpression"; 
		case 94: return "Life"; 
		case 95: return "LifeExpression"; 
		case 96: return "UVSequence"; 
		case 97: return "UVSequenceModifier"; 
		case 98: return "UVSequenceExpression"; 
		case 99: return "UVScroll"; 
		case 100: return "TextureUnit"; 
		case 101: return "TextureUnitExpression"; 
		case 102: return "TextureFilter"; 
		case 103: return "EmitterShape2D"; 
		case 104: return "EmitterShape2DExpression"; 
		case 105: return "EmitterShape3D"; 
		case 106: return "EmitterShape3DExpression"; 
		case 107: return "AlphaCorrection"; 
		case 108: return "ContrastHighlighter"; 
		case 109: return "ColorGrading"; 
		case 110: return "ColorGradingExpression"; 
		case 111: return "Blink"; 
		case 112: return "Noise"; 
		case 113: return "NoiseExpression"; 
		case 114: return "TexelChannelOperator"; 
		case 115: return "TexelChannelOperatorClip"; 
		case 116: return "TexelChannelOperatorExpression"; 
		case 117: return "TypeStrainRibbon"; 
		case 118: return "TypeStrainRibbonExpression"; 
		case 119: return "TypeLightning3D"; 
		case 120: return "TypeLightning3DExpression"; 
		case 121: return "TypeLightning3DMaterial"; 
		case 122: return "TypeLightning3DMaterialClip"; 
		case 123: return "TypeLightning3DMaterialExpression"; 
		case 124: return "TypeLightningExpensive"; 
		case 125: return "PtLightningColliderAction"; 
		case 126: return "PtLightningBranchAction"; 
		case 127: return "ShaderSettings"; 
		case 128: return "ShaderSettingsExpression"; 
		case 129: return "Distortion"; 
		case 130: return "DistortionExpression"; 
		case 131: return "VolumetricLighting"; 
		case 132: return "RenderTarget"; 
		case 133: return "DrawSubscene"; 
		case 134: return "UnitCulling"; 
		case 135: return "UnitCullingExpression"; 
		case 136: return "PtLife"; 
		case 137: return "PtBehavior"; 
		case 138: return "PtBehaviorClip"; 
		case 139: return "PlayEfx"; 
		case 140: return "FadeByAngle"; 
		case 141: return "FadeByAngleExpression"; 
		case 142: return "FadeByEmitterAngle"; 
		case 143: return "FadeByDepth"; 
		case 144: return "FadeByDepthExpression"; 
		case 145: return "FadeByOcclusion"; 
		case 146: return "FadeByOcclusionExpression"; 
		case 147: return "FadeByRootCulling"; 
		case 148: return "FakeDoF"; 
		case 149: return "LuminanceBleed"; 
		case 150: return "ScaleByDepth"; 
		case 151: return "TypeNodeBillboard"; 
		case 152: return "TypeNodeBillboardExpression"; 
		case 153: return "FluidEmitter2D"; 
		case 154: return "FluidEmitter2DClip"; 
		case 155: return "FluidEmitter2DExpression"; 
		case 156: return "FluidSimulator2D"; 
		case 157: return "FluidParticle2DSimulator"; 
		case 158: return "PlayEmitter"; 
		case 159: return "PtTransform3D"; 
		case 160: return "PtTransform3DClip"; 
		case 161: return "PtTransform3DExpression"; 
		case 162: return "PtTransform2D"; 
		case 163: return "PtTransform2DClip"; 
		case 164: return "PtVelocity3D"; 
		case 165: return "PtVelocity3DClip"; 
		case 166: return "PtVelocity2D"; 
		case 167: return "PtVelocity2DClip"; 
		case 168: return "PtColliderAction"; 
		case 169: return "PtProjection"; 
		case 170: return "PtCollision"; 
		case 171: return "PtCollisionInfluence"; 
		case 172: return "PtColor"; 
		case 173: return "PtColorClip"; 
		case 174: return "PtColorMixer"; 
		case 175: return "PtColorMixerClip"; 
		case 176: return "PtUvSequence"; 
		case 177: return "PtUvSequenceClip"; 
		case 178: return "MeshEmitter"; 
		case 179: return "MeshEmitterClip"; 
		case 180: return "MeshEmitterExpression"; 
		case 181: return "ScreenSpaceEmitter"; 
		case 182: return "Listener"; 
		case 183: return "VectorFieldParameter"; 
		case 184: return "VectorFieldParameterClip"; 
		case 185: return "VectorFieldParameterExpression"; 
		case 186: return "GlobalVectorField"; 
		case 187: return "GlobalVectorFieldClip"; 
		case 188: return "GlobalVectorFieldExpression"; 
		case 189: return "DirectionalFieldParameter"; 
		case 190: return "DirectionalFieldParameterClip"; 
		case 191: return "DirectionalFieldParameterExpression"; 
		case 192: return "DepthOperator"; 
		case 193: return "PlaneCollider"; 
		case 194: return "PlaneColliderExpression"; 
		case 195: return "DepthOcclusion"; 
		case 196: return "ShapeOperator"; 
		case 197: return "ShapeOperatorExpression"; 
		case 198: return "WindInfluence3DDelayFrame"; 
		case 199: return "WindInfluence3D"; 
		case 200: return "Attractor"; 
		case 201: return "AttractorClip"; 
		case 202: return "AttractorExpression"; 
		case 203: return "PtVortexelWind"; 
		case 204: return "PtVortexelWindExpression"; 
		case 205: return "VortexelWindEmitter"; 
		case 206: return "VortexelWindEmitterExpression"; 
		case 207: return "PtVortexelHeatSource"; 
		case 208: return "VortexelCollider"; 
		case 209: return "VortexelColliderExpression"; 
		case 210: return "VortexelIndoorMask"; 
		case 211: return "VortexelIndoorMaskExpression"; 
		case 212: return "PtVortexelPhysics"; 
		case 213: return "PtVortexelPhysicsSimple"; 
		case 214: return "PtVortexelSnap"; 
		case 215: return "EmitterPriority"; 
		case 216: return "DrawOverlay"; 
		case 217: return "VectorField"; 
		case 218: return "VolumeField"; 
		case 219: return "DirectionalField"; 
		case 220: return "AngularVelocity3DDelayFrame"; 
		case 221: return "AngularVelocity3D"; 
		case 222: return "PtAngularVelocity3D"; 
		case 223: return "PtAngularVelocity3DExpression"; 
		case 224: return "AngularVelocity2DDelayFrame"; 
		case 225: return "AngularVelocity2D"; 
		case 226: return "PtAngularVelocity2D"; 
		case 227: return "PtAngularVelocity2DExpression"; 
		case 228: return "PtPathTranslate"; 
		case 229: return "PtPathTranslateExpression"; 
		case 230: return "IgnorePlayerColor"; 
		case 231: return "IgnoreSettings"; 
		case 232: return "ProceduralDistortionDelayFrame"; 
		case 233: return "ProceduralDistortion"; 
		case 234: return "ProceduralDistortionClip"; 
		case 235: return "ProceduralDistortionExpression"; 
		case 236: return "TestBehaviorUpdater"; 
		case 237: return "StretchBlur"; 
		case 238: return "StretchBlurExpression"; 
		case 239: return "EmitterHSV"; 
		case 240: return "EmitterHSVExpression"; 
		case 241: return "FlowMap"; 
		case 242: return "RgbCommon"; 
		case 243: return "RgbCommonExpression"; 
		case 244: return "RgbWater"; 
		case 245: return "RgbWaterExpression"; 
		case 246: return "PtFreezer"; 
		case 247: return "AssignCSV"; 
		case 248: return "DestinationCSV"; 
		case 249: return "GpuPhysics"; 
		case 250: return "TerrainSnap"; 
		case 251: return "RepeatArea"; 
		case 252: return "EmitMask"; 
		case 253: return "ParticleTimer"; 
		case 254: return "Trigger"; 
		case 255: return "CustomComputeShader"; 
		case 256: return "VolumeBufferInfluence"; 
		case 257: return "VolumeBufferOperator"; 
		case 258: return "TypeGpuBillboard"; 
		case 259: return "TypeGpuBillboardExpression"; 
		case 260: return "TypeGpuPolygon"; 
		case 261: return "TypeGpuPolygonExpression"; 
		case 262: return "TypeGpuRibbonFollow"; 
		case 263: return "TypeGpuRibbonFollowExpression"; 
		case 264: return "TypeGpuRibbonLength"; 
		case 265: return "TypeGpuRibbonLengthExpression"; 
		case 266: return "TypeGpuMesh"; 
		case 267: return "TypeGpuMeshClip"; 
		case 268: return "TypeGpuMeshExpression"; 
		case 269: return "TypeGpuMeshTrail"; 
		case 270: return "TypeGpuMeshTrailClip"; 
		case 271: return "TypeGpuMeshTrailExpression"; 
		case 272: return "TypeGpuLightning3D"; 
		case 282: return "ItemNum"; 
		default: return "";
	}
}
string GetEFXStructName(uint itemType)
{
    switch(Version)
    {
        case EfxVersion_RE7: return getStructNameRE7(itemType);
		case EfxVersion_RE2: return getStructNameRE2(itemType);
		case EfxVersion_DMC5: return getStructNameDMC5(itemType);
		case EfxVersion_RE3: return getStructNameRE3(itemType);
		case EfxVersion_MHRise: return getStructNameMHRise(itemType);
		case EfxVersion_RE8: return getStructNameRE8(itemType);
		case EfxVersion_RERT: return getStructNameRERT(itemType);
		case EfxVersion_MHRiseSB: return getStructNameMHRiseSB(itemType);
		case EfxVersion_SF6: return getStructNameSF6(itemType);
		case EfxVersion_RE4: return getStructNameRE4(itemType);
		case EfxVersion_DD2: return getStructNameDD2(itemType);
		case EfxVersion_MHWilds: return getStructNameMHWilds(itemType);
        default: return "";
    }
}
